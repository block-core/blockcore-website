{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chains/chains.component.ts","./src/app/chains/chains.component.html","./src/app/create-chain/create-chain.component.ts","./src/app/create-chain/create-chain.component.html","./src/app/discord/discord.component.ts","./src/app/discord/discord.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/nav-footer/nav-menu.component.ts","./src/app/nav-footer/nav-footer.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/platform/platform.component.ts","./src/app/platform/platform.component.html","./src/app/sponsors/sponsors.component.ts","./src/app/sponsors/sponsors.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html'\n})\nexport class AboutComponent {\n\n}\n","<h1>Blockcore /// About</h1>\n\n<p>Blockcore is an open source project started by a group of blockchain developers and engineers to realize a fully\n  integrated platform for building custom blockchains.</p>\n\n<h2>Contact us</h2>\n\n<p>\n  To get in contact with the team, <a href=\"https://www.blockcore.net/discord\">join our Discord</a>.\n</p>\n\n<p>\n  You can also contact us by e-mail to <a href=\"mailto:post@blockcore.net\">post@blockcore.net</a>.\n</p>\n\n<h3>Community Meetings (on Discord):</h3>\n\n<p>Technical: Wednesday (weekly) at 20:30 CET</p>\n<p>Social: First Friday each month at 20:00 CET</p>\n\n<h2>Logos</h2>\n\n<p>\nHere are our logos and banners available for download and use.\n</p>\n<img class=\"mode-aware\" src=\"assets/blockcore-256x256.png\"><br>\n\n<h3>Square</h3>\n\n<ul>\n  <li><a href=\"assets/blockcore-256x256.png\">Dark 256x256</a></li>\n  <li><a href=\"assets/blockcore-512x512.png\">Dark 512x512</a></li>\n  <li><a href=\"assets/blockcore-1024x1024.png\">Dark 1024x1024</a></li>\n  <li><a href=\"assets/blockcore-light-256x256.png\">Light 256x256</a></li>\n  <li><a href=\"assets/blockcore-light-512x512.png\">Light 512x512</a></li>\n  <li><a href=\"assets/blockcore-light-1024x1024.png\">Light 1024x1024</a></li>\n</ul>\n\n<h3>Original</h3>\n\n<ul>\n  <li><a href=\"assets/blockcore.svg\">Vector (SVG)</a></li>\n  <li><a href=\"assets/blockcore-small.png\">Dark 155x256</a></li>\n  <li><a href=\"assets/blockcore.png\">Dark 310x512</a></li>\n  <li><a href=\"assets/blockcore-large.png\">Dark 1242x2048</a></li>\n  <li><a href=\"assets/blockcore-light-small.png\">Light 155x256</a></li>\n  <li><a href=\"assets/blockcore-light.png\">Light 310x512</a></li>\n  <li><a href=\"assets/blockcore-light-large.png\">Light 1242x2048</a></li>\n</ul>\n\n<h3>Icons</h3>\n\n<ul>\n  <li><a href=\"assets/favicon.ico\">favicon.ico (16, 32 sizes)</a></li>\n  <li><a href=\"assets/blockcore.ico\">blockcore.ico (16, 32, 96, 192, 256 sizes)</a></li>\n</ul>\n\n<h3>Banners</h3>\n\n<ul>\n  <li><a href=\"assets/blockcore-banner-728x90.png\">Banner horizontal (728x90)</a></li>\n  <li><a href=\"assets/blockcore-banner-300x600.png\">Banner vertical (300x600)</a></li>\n</ul>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<!--<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</body>-->\n\n\n<body>\n\n   <app-nav-menu></app-nav-menu>\n\n   <div class=\"content\">\n      <router-outlet></router-outlet>\n   </div>\n\n   <app-nav-footer></app-nav-footer>\n\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { PlatformComponent } from './platform/platform.component';\nimport { AboutComponent } from './about/about.component';\nimport { ChainsComponent } from './chains/chains.component';\nimport { SponsorsComponent } from './sponsors/sponsors.component';\nimport { NavFooterComponent } from './nav-footer/nav-menu.component';\nimport { CreateChainComponent } from './create-chain/create-chain.component';\nimport { DiscordComponent } from './discord/discord.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    NavFooterComponent,\n    HomeComponent,\n    PlatformComponent,\n    AboutComponent,\n    SponsorsComponent,\n    ChainsComponent,\n    CreateChainComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, pathMatch: 'full' },\n      { path: 'platform', component: PlatformComponent },\n      { path: 'chains', component: ChainsComponent },\n      { path: 'create-chain', component: CreateChainComponent },\n      { path: 'discord', component: DiscordComponent },\n      { path: 'sponsors', component: SponsorsComponent },\n      { path: 'team', component: AboutComponent }, // Backward compatible website URL.\n      { path: 'about', component: AboutComponent },\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-chains',\n  templateUrl: './chains.component.html'\n})\nexport class ChainsComponent {\n\n}\n","<h1>Blockcore /// Chains</h1>\n\n<p>As anyone is free to <a routerLink=\"/create-chain\">create their own blockchains</a> of the Blockcore Platform, the Blockcore team is not responsible for their deployments, \n  infrastructure, support and have no roles associated with the different implementations (blockchains).</p>\n\n<p>If you are building and running a blockchain based on Blockcore, please let us know and we can get you listed below.</p>\n\n<p>Want to create your own blockchain? Use our <a routerLink=\"/create-chain\">instructions and generators here</a>.</p>\n\n<h2>Supported Blockchains</h2>\n\n<ul>\n  <li>Bitcoin</li>\n  <li><a href=\"https://www.city-chain.org/\">City Chain (CITY)</a></li>\n  <li><a href=\"https://impleum.com/\">Impleum (IMPLX)</a></li>\n  <li><a href=\"https://economy.openexo.com/\">ExO Economy (EXOS)</a></li>\n  <li><a href=\"https://www.rutanio.com/\">Rutanio (RUTA)</a></li>\n  <li><a href=\"https://github.com/Solaris-Project\">Solaris (XLR)</a></li>\n  <li><a href=\"https://www.stratisplatform.com/\">Stratis (STRAT)</a></li>\n  <li><a href=\"https://github.com/sonofsatoshi2020/xds\">XDS (XDS)</a></li>\n  <li><a href=\"https://github.com/x42protocol\">x42 (X42)</a></li>\n</ul>\n\n<h2>Reference Nodes</h2>\n\n<p>The Blockcore team provides reference implementations for various blockchains. These are unsupported node software, use with caution. You can look at these to \n  get inspiration and examples on building your own customized blockchain.\n</p>\n\n<p>\n  <a href=\"https://github.com/block-core/blockcore-nodes\">https://github.com/block-core/blockcore-nodes</a>\n</p>\n\n<h2>Chain Setup</h2>\n\n<p>We at Blockcore believe in making blockchain technology easier and more approachable for every developer, so part of this guides us in how \n  we build our technologies. We attempt to make our technology easily customizeable through setup and configuration, as oppose to code changes.\n</p>\n\n<p>\n  We have a seperate web site where we publish chain setup information for the different chains. While this is officially hosted by Blockcore, \n  it is the individual teams that are responsible for maintaining these setup definitions.\n</p>\n\n<p>\n  <a href=\"https://chains.blockcore.net\">https://chains.blockcore.net</a>\n</p>\n\n<h2>Hosted Services</h2>\n\n<p>While anyone are free to fork and modify our software, we also host our own services running some of the blockchains that are implemented on \n  Blockcore. These are hosted with no SLA (Service Level Agreement), and currently for free. If you'd like us to continue providing this service \n  to the community, consider becoming a sponsor of Blockcore.\n</p>\n\n<h3>Blockcore Explorer</h3>\n\nMulti Chain: <a href=\"https://explorer.blockcore.net\">https://explorer.blockcore.net</a>\n\n<h3>Blockcore Indexer</h3>\n\n<ul>\n  <li><a href=\"https://btc.indexer.blockcore.net\">https://btc.indexer.blockcore.net</a></li>\n   <li><a href=\"https://city.indexer.blockcore.net\">https://city.indexer.blockcore.net</a></li>\n   <li><a href=\"https://implx.indexer.blockcore.net\">https://implx.indexer.blockcore.net</a></li>\n   <li><a href=\"https://exos.indexer.blockcore.net\">https://exos.indexer.blockcore.net</a></li>\n   <li><a href=\"https://ruta.indexer.blockcore.net\">https://ruta.indexer.blockcore.net</a></li>\n   <li><a href=\"https://strat.indexer.blockcore.net\">https://strat.indexer.blockcore.net</a></li>\n   <li><a href=\"https://xds.indexer.blockcore.net\">https://xds.indexer.blockcore.net</a></li>\n   <li><a href=\"https://xlr.indexer.blockcore.net\">https://xlr.indexer.blockcore.net</a></li>\n   <li><a href=\"https://x42.indexer.blockcore.net\">https://x42.indexer.blockcore.net</a></li>\n</ul>\n","import { Component, Inject } from '@angular/core';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-create-chain',\n  templateUrl: './create-chain.component.html',\n  styleUrls: ['./create-chain.component.css']\n})\nexport class CreateChainComponent {\n\n  os = 'win';\n  genesisWarning: string;\n  genesisjson: string;\n  advanced: boolean;\n\n  config = {\n    name: 'MyCoin',\n    ticker: 'MYC',\n    genesis: 'My Unique Blockchain',\n    coinType: '3601',\n    magic: '01-4D-59-43',\n    pubkeyaddress: '50',\n    scriptaddress: '110',\n    secretaddress: '160',\n    preminereward: '1000000',\n\n    powreward: '10',\n    posreward: '10',\n    postimestampmask: '0000000F',\n    posversion: '3',\n\n    port: '15001',\n    rpcport: '15002',\n    apiport: '15003',\n\n    portregtest: '25001',\n    rpcportregtest: '25002',\n    apiportregtest: '25003',\n\n    porttest: '35001',\n    rpcporttest: '35002',\n    apiporttest: '35003',\n\n    targetspacing: '64',\n    lastpowblock: '25000',\n\n    seeddns1: 'seed.mycoin.net',\n    seeddns2: 'seed.mycoin.com',\n    seednode1: '23.23.23.23',\n    seednode2: '24.24.24.24',\n\n    genesistimemain: '',\n    genesisnoncemain: '',\n    genesisbitsmain: '',\n    genesisblockhashmain: '',\n    genesismerklehashmain: '',\n\n    genesistimeregtest: '',\n    genesisnonceregtest: '',\n    genesisbitsregtest: '',\n    genesisblockhashregtest: '',\n    genesismerklehashregtest: '',\n\n    genesistimetest: '',\n    genesisnoncetest: '',\n    genesisbitstest: '',\n    genesisblockhashtest: '',\n    genesismerklehashtest: ''\n\n  };\n\n  get generator() {\n    let prefix = '';\n\n    if (this.os === 'win') {\n      prefix = 'Blockcore.Generator.exe';\n    } else {\n      prefix = 'dotnet run Blockcore.Generator.dll';\n    }\n\n    return prefix + ' \\\"' + this.config.genesis + '\\\"';\n  }\n\n  get node() {\n    let prefix = '';\n    let newline = '\\n';\n    let newcmd = ' \\\\\\n';\n\n    if (this.os === 'win') {\n      newline = '\\r\\n';\n      newcmd = ' ^\\r\\n';\n      prefix = 'chcp 65001' + newline;\n    }\n\n    let cmd = prefix;\n\n    cmd += 'dotnet new blockcorecoin' + newcmd;\n    cmd += '--output ' + this.config.name + newcmd;\n    cmd += '--cointicker ' + this.config.ticker + newcmd;\n    cmd += '--magic \"' + this.config.magic + '\"' + newcmd;\n    cmd += '--cointype ' + this.config.coinType + newcmd;\n    cmd += '--pubkeyaddress ' + this.config.pubkeyaddress + newcmd;\n    cmd += '--scriptaddress ' + this.config.scriptaddress + newcmd;\n    cmd += '--secretaddress ' + this.config.secretaddress + newcmd;\n    cmd += '--pow-reward ' + this.config.powreward + newcmd;\n    cmd += '--pos-reward ' + this.config.posreward + newcmd;\n    cmd += '--pos-timestamp-mask \"' + this.config.postimestampmask + '\"' + newcmd;\n    cmd += '--pos-version ' + this.config.posversion + newcmd;\n    cmd += '--premine-reward ' + this.config.preminereward + newcmd;\n    cmd += '--port ' + this.config.port + newcmd;\n    cmd += '--rpcport ' + this.config.rpcport + newcmd;\n    cmd += '--apiport ' + this.config.apiport + newcmd;\n    cmd += '--port-regtest ' + this.config.portregtest + newcmd;\n    cmd += '--rpcport-regtest ' + this.config.rpcportregtest + newcmd;\n    cmd += '--apiport-regtest ' + this.config.apiportregtest + newcmd;\n    cmd += '--port-test ' + this.config.porttest + newcmd;\n    cmd += '--rpcport-test ' + this.config.rpcporttest + newcmd;\n    cmd += '--apiport-test ' + this.config.apiporttest + newcmd;\n    cmd += '--target-spacing ' + this.config.targetspacing + newcmd;\n    cmd += '--lastpowblock ' + this.config.lastpowblock + newcmd;\n    cmd += '--seeddns1 \"' + this.config.seeddns1 + '\"' + newcmd;\n    cmd += '--seeddns2 \"' + this.config.seeddns2 + '\"' + newcmd;\n    cmd += '--seednode1 \"' + this.config.seednode1 + '\"' + newcmd;\n    cmd += '--seednode2 \"' + this.config.seednode2 + '\"' + newcmd;\n    cmd += '--genesistext \"' + this.config.genesis + '\"' + newcmd;\n    cmd += '--genesis-time-main ' + this.config.genesistimemain + newcmd;\n    cmd += '--genesis-nonce-main ' + this.config.genesisnoncemain + newcmd;\n    cmd += '--genesis-bits-main \"' + this.config.genesisbitsmain + '\"' + newcmd;\n    cmd += '--genesis-block-hash-main \"' + this.config.genesisblockhashmain + '\"' + newcmd;\n    cmd += '--genesis-merkle-hash-main \"' + this.config.genesismerklehashmain + '\"' + newcmd;\n    cmd += '--genesis-time-regtest ' + this.config.genesistimeregtest + newcmd;\n    cmd += '--genesis-nonce-regtest ' + this.config.genesisnonceregtest + newcmd;\n    cmd += '--genesis-bits-regtest \"' + this.config.genesisbitsregtest + '\"' + newcmd;\n    cmd += '--genesis-block-hash-regtest \"' + this.config.genesisblockhashregtest + '\"' + newcmd;\n    cmd += '--genesis-merkle-hash-regtest \"' + this.config.genesismerklehashregtest + '\"' + newcmd;\n    cmd += '--genesis-time-test ' + this.config.genesistimetest + newcmd;\n    cmd += '--genesis-nonce-test ' + this.config.genesisnoncetest + newcmd;\n    cmd += '--genesis-bits-test \"' + this.config.genesisbitstest + '\"' + newcmd;\n    cmd += '--genesis-block-hash-test \"' + this.config.genesisblockhashtest + '\"' + newcmd;\n    cmd += '--genesis-merkle-hash-test \"' + this.config.genesismerklehashtest + '\"' + newcmd;\n    cmd += '--force' + newline;\n\n    return cmd;\n  }\n\n  get filename() {\n    let filename = 'generate.sh';\n\n    if (this.os === 'win') {\n      filename = 'generate.bat';\n    }\n\n    return filename;\n  }\n\n  parseJson() {\n    let json = null;\n\n    try {\n      json = JSON.parse(this.genesisjson);\n    } catch (error) {\n      this.genesisWarning = error;\n      return;\n    }\n\n    if (json.coinBaseText !== this.config.genesis) {\n      this.genesisWarning = 'Error: The genesis text in generated output is different than input above. You must generate with the same parameter.';\n      return;\n    } else {\n      this.genesisWarning = '';\n    }\n\n    const mainNetwork = json.networks[0];\n    const regtestNetwork = json.networks[1];\n    const testNetwork = json.networks[2];\n\n    this.config.genesisbitsmain = mainNetwork.bits;\n    this.config.genesisblockhashmain = mainNetwork.hash;\n    this.config.genesismerklehashmain = mainNetwork.hashMerkleRoot;\n    this.config.genesisnoncemain = mainNetwork.nonce;\n    this.config.genesistimemain = mainNetwork.time;\n\n    this.config.genesisbitsregtest = regtestNetwork.bits;\n    this.config.genesisblockhashregtest = regtestNetwork.hash;\n    this.config.genesismerklehashregtest = regtestNetwork.hashMerkleRoot;\n    this.config.genesisnonceregtest = regtestNetwork.nonce;\n    this.config.genesistimeregtest = regtestNetwork.time;\n\n    this.config.genesisbitstest = testNetwork.bits;\n    this.config.genesisblockhashtest = testNetwork.hash;\n    this.config.genesismerklehashtest = testNetwork.hashMerkleRoot;\n    this.config.genesisnoncetest = testNetwork.nonce;\n    this.config.genesistimetest = testNetwork.time;\n  }\n\n  download() {\n    const blob = new Blob([this.node], { type: 'text/plain;charset=utf-8' });\n    saveAs(blob, this.filename);\n  }\n}\n","<div class=\"config-form\">\n\n  <h1>Blockcore /// Create</h1>\n\n  <h3>PREVIEW - NOT FULLY FUNCTIONAL</h3>\n\n  <p>\n    Our tools makes it super easy to create your own blockchain, but there is quite a few configuration parameters that\n    needs to be set for the tools.</p>\n\n  <p>This page will generate the commands for you, making it even quicker and easier to get started.</p>\n\n  <h2>Configuration</h2>\n\n  <p>\n    <label for=\"name\">Name (no whitespace)</label>\n    <input id=\"name\" type=\"text\" [(ngModel)]=\"config.name\">\n  </p>\n\n  <p>\n    <label for=\"ticker\">Ticker/Symbol <a href=\"https://github.com/satoshilabs/slips/blob/master/slip-0044.md\"\n        target=\"_blank\"><i class=\"fas fa-question-circle\"></i></a></label>\n    <input id=\"ticker\" type=\"text\" [(ngModel)]=\"config.ticker\">\n  </p>\n\n  <p>\n    <label for=\"coinType\">Coin Type (HD index) <a href=\"https://github.com/satoshilabs/slips/blob/master/slip-0044.md\"\n        target=\"_blank\"><i class=\"fas fa-question-circle\"></i></a></label>\n    <input id=\"coinType\" type=\"text\" [(ngModel)]=\"config.coinType\">\n  </p>\n\n  <p>\n    <label for=\"genesis\">Genesis Text <a href=\"https://en.bitcoin.it/wiki/Genesis_block\" target=\"_blank\"><i\n          class=\"fas fa-question-circle\"></i></a></label>\n    <input id=\"genesis\" type=\"text\" [(ngModel)]=\"config.genesis\">\n  </p>\n\n  <p>\n    <label for=\"magic\">Magic Header (Hex)<a href=\"https://ascii.cl/\" target=\"_blank\"><i\n          class=\"fas fa-question-circle\"></i></a></label>\n    <input id=\"magic\" type=\"text\" [(ngModel)]=\"config.magic\">\n  </p>\n\n  <p>\n    <label for=\"pubkeyaddress\">Coin Address Prefix <a href=\"https://en.bitcoin.it/wiki/List_of_address_prefixes\"\n        target=\"_blank\"><i class=\"fas fa-question-circle\"></i></a></label>\n    <input id=\"pubkeyaddress\" type=\"text\" [(ngModel)]=\"config.pubkeyaddress\">\n  </p>\n\n  <p>\n    <label for=\"scriptaddress\">Script Address Prefix <a href=\"https://en.bitcoin.it/wiki/List_of_address_prefixes\"\n        target=\"_blank\"><i class=\"fas fa-question-circle\"></i></a></label>\n    <input id=\"scriptaddress\" type=\"text\" [(ngModel)]=\"config.scriptaddress\">\n  </p>\n\n  <p>\n    <label for=\"secretaddress\">Secret Address Prefix <a href=\"https://en.bitcoin.it/wiki/List_of_address_prefixes\"\n        target=\"_blank\"><i class=\"fas fa-question-circle\"></i></a></label>\n    <input id=\"secretaddress\" type=\"text\" [(ngModel)]=\"config.secretaddress\">\n  </p>\n\n  <p>\n    <label for=\"preminereward\">Premine Reward</label>\n    <input id=\"preminereward\" type=\"text\" [(ngModel)]=\"config.preminereward\">\n  </p>\n\n  <p>\n    <label for=\"lastpowblock\">Last Proof-of-Work block</label>\n    <input id=\"lastpowblock\" type=\"text\" [(ngModel)]=\"config.lastpowblock\">\n  </p>\n\n  <p>\n    <label for=\"powreward\">Proof-of-Work Reward</label>\n    <input id=\"powreward\" type=\"text\" [(ngModel)]=\"config.powreward\">\n  </p>\n  <p>\n    <label for=\"posreward\">Proof-of-Stake Reward</label>\n    <input id=\"posreward\" type=\"text\" [(ngModel)]=\"config.posreward\">\n  </p>\n\n  <p>\n    <label for=\"port\">Port (Peer-to-peer TCP port)</label>\n    <input id=\"port\" type=\"text\" [(ngModel)]=\"config.port\">\n  </p>\n  <p>\n    <label for=\"rpcport\">RPC Port</label>\n    <input id=\"rpcport\" type=\"text\" [(ngModel)]=\"config.rpcport\">\n  </p>\n  <p>\n    <label for=\"apiport\">API Port</label>\n    <input id=\"apiport\" type=\"text\" [(ngModel)]=\"config.apiport\">\n  </p>\n  <p>\n    <label for=\"portregtest\">Port: RegTest</label>\n    <input id=\"portregtest\" type=\"text\" [(ngModel)]=\"config.portregtest\">\n  </p>\n  <p>\n    <label for=\"rpcportregtest\">RPC Port: RegTest</label>\n    <input id=\"rpcportregtest\" type=\"text\" [(ngModel)]=\"config.rpcportregtest\">\n  </p>\n  <p>\n    <label for=\"apiportregtest\">API Port: RegTest</label>\n    <input id=\"apiportregtest\" type=\"text\" [(ngModel)]=\"config.apiportregtest\">\n  </p>\n  <p>\n    <label for=\"porttest\">Port: Test</label>\n    <input id=\"porttest\" type=\"text\" [(ngModel)]=\"config.porttest\">\n  </p>\n  <p>\n    <label for=\"rpcporttest\">RPC Port: Test</label>\n    <input id=\"rpcporttest\" type=\"text\" [(ngModel)]=\"config.rpcporttest\">\n  </p>\n  <p>\n    <label for=\"apiporttest\">API Port: Test</label>\n    <input id=\"apiporttest\" type=\"text\" [(ngModel)]=\"config.apiporttest\">\n  </p>\n\n  <p>\n    <label for=\"seeddns1\">DNS Seed 1</label>\n    <input id=\"seeddns1\" type=\"text\" [(ngModel)]=\"config.seeddns1\">\n  </p>\n  <p>\n    <label for=\"seeddns2\">DNS Seed 2</label>\n    <input id=\"seeddns2\" type=\"text\" [(ngModel)]=\"config.seeddns2\">\n  </p>\n  <p>\n    <label for=\"seednode1\">Node 1 IP address</label>\n    <input id=\"seednode1\" type=\"text\" [(ngModel)]=\"config.seednode1\">\n  </p>\n  <p>\n    <label for=\"seednode2\">Node 2 IP address</label>\n    <input id=\"seednode2\" type=\"text\" [(ngModel)]=\"config.seednode2\">\n  </p>\n\n  <button *ngIf=\"!advanced\" (click)=\"advanced = true\">Show advanced options</button>\n  <button *ngIf=\"advanced\" (click)=\"advanced = false\">Hide advanced options</button>\n\n  <p *ngIf=\"advanced\">\n    <label for=\"postimestampmask\">pos-timestamp-mask</label>\n    <input id=\"postimestampmask\" type=\"text\" [(ngModel)]=\"config.postimestampmask\">\n  </p>\n  <p *ngIf=\"advanced\">\n    <label for=\"posversion\">pos-version</label>\n    <input id=\"posversion\" type=\"text\" [(ngModel)]=\"config.posversion\">\n  </p>\n\n  <p *ngIf=\"advanced\">\n    <label for=\"targetspacing\">target-spacing</label>\n    <input id=\"targetspacing\" type=\"text\" [(ngModel)]=\"config.targetspacing\">\n  </p>\n\n  <h2>Commands</h2>\n\n  <p>Here are the generated output commands you can copy and paste to your local computer.</p>\n\n  <p>\n    Choose your operating system:\n  </p>\n\n  <p>\n    <select name=\"os\" [(ngModel)]=\"os\">\n      <option value=\"win\">Windows</option>\n      <option value=\"linux\">Linux</option>\n      <option value=\"mac\">Mac</option>\n    </select>\n  </p>\n\n  <h3>Prerequisites</h3>\n\n  <p><a href=\"https://dotnet.microsoft.com/download\" target=\"_blank\">.NET Core SDK</a></p>\n  <p>\n    <a href=\"https://github.com/block-core/blockcore-tools/releases\" target=\"_blank\">Blockcore Genesis Generator</a>\n  </p>\n\n  <h3>Generate Your Genesis Block</h3>\n\n  <p>Command:</p>\n\n  <pre><code>{{generator}}</code></pre>\n\n  <p>This will generate an \"genesis.json\" file. You must open this file and copy the entire file into input below:</p>\n\n  <p>\n    <label for=\"genesisjson\">Genesis JSON</label>\n    <textarea id=\"genesisjson\" name=\"genesisjson\" [(ngModel)]=\"genesisjson\" (blur)=\"parseJson()\" rows=\"8\" cols=\"100\">\n      {\n        \"description\": \"Genesis Blocks Generated by Blockcore Genesis Block Generator v1.0.\",\n        \"url\": \"https://www.blockcore.net\",\n        \"creationDate\": \"2020-05-27T11:29:52.6402285+02:00\",\n        \"coinBaseText\": \"My Unique Blockchain\",\n        \"networks\": [\n          {\n            \"network\": \"Main\",\n            \"time\": 1590571781,\n            \"nonce\": 108699,\n            \"bits\": \"1E0FFFFF\",\n            \"version\": 1,\n            \"hash\": \"00000d8eb135b69e2391801d37fce8ae15ee06133797a74f7c795cabd153afae\",\n            \"hashMerkleRoot\": \"679b9e914f43a11da845d5d83c3918679e39874522963b67626e53fc09fac458\"\n          },\n          {\n            \"network\": \"RegTest\",\n            \"time\": 1590571791,\n            \"nonce\": 10756,\n            \"bits\": \"1F00FFFF\",\n            \"version\": 1,\n            \"hash\": \"0000f44899398d40b1b7e2e11469181becbfb03feed96973dd43e0f56c14e6fd\",\n            \"hashMerkleRoot\": \"58633411533dc3eebfa0848f3959774774f90e6187e937ca4a62bb30bcded4e3\"\n          },\n          {\n            \"network\": \"TestNet\",\n            \"time\": 1590571792,\n            \"nonce\": 1746,\n            \"bits\": \"1F0FFFFF\",\n            \"version\": 1,\n            \"hash\": \"00033a17fc9b0d94d229c63cd1abbf38473bf09134c0843aef0991d0f4139217\",\n            \"hashMerkleRoot\": \"c2c3bd9735b43eeed5e1f7131a8d579bcd1a05357d07d7bfb0505ec665c41185\"\n          }\n        ]\n      }\n    </textarea>\n    <br>\n    <span class=\"warning\" *ngIf=\"genesisWarning\">{{genesisWarning}}</span>\n  </p>\n\n  <h3>Generate Your Blockchain Node Software</h3>\n\n  <p>First you must install the template project:</p>\n\n  <pre><code>dotnet new --install Blockcore.Coin.Template</code></pre>\n\n  <p>Download this generated file and run it in a new and empty folder you create on your computer.</p>\n\n  <p>\n    <button (click)=\"download()\">Download Script ({{filename}})</button>\n  </p>\n\n  <p><em>Note on warnings: You will see warnings on your computer when download this script. You must accept that the\n      file is kept / saved anyway.</em></p>\n\n  <p>If you don't want to download or are unable to, you can see the contents here and manually copy and run it on your\n    computer:</p>\n\n  <pre><code>{{node}}</code></pre>\n\n  <p>If successful you should see the output: <em>\"The template \"Blockcore Coin\" was created successfully.\"</em></p>\n\n  <h2>Congratulations!</h2>\n\n  <p>You now have a folder on your computer with the source code that can be compiled into a running node software. The\n    node software even includes basic wallet functionality.</p>\n\n  <p>Blockchain technology is advanced and there are still more steps to be completed before you have a fully functional\n    blockchain up and running. You need multiple nodes, you need mining / staking nodes. You might want to have DNS\n    nodes. We'll provide instructions for this in the future, until then, join our Discord with the invite link at the\n    bottom of this page.</p>\n\n  <h2>Extend your ecosystem</h2>\n\n  <h3>Add your blockchain to supported chains</h3>\n\n  <p>If you want to, you can now submit your blockchain to the supported chains list. If you do this, the Explorer and\n    Indexer can more easily be adopted to your chain.</p>\n\n  <p><a href=\"https://github.com/block-core/chaininfo\">https://github.com/block-core/chaininfo</a></p>\n\n  <h3>Add an Indexer for your chain</h3>\n\n  <p><a href=\"https://github.com/block-core/blockcore-indexer\">https://github.com/block-core/blockcore-indexer</a></p>\n\n  <h3>Add an Explorer for your chain</h3>\n\n  <p><a href=\"https://github.com/block-core/blockcore-explorer\">https://github.com/block-core/blockcore-explorer</a></p>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-discord',\n    templateUrl: './discord.component.html',\n})\nexport class DiscordComponent {\n    constructor() {\n        window.location.href = 'https://discord.gg/fs4zjKcyTx';\n    }\n}\n","Redirect to Discord...","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","<!-- <div class=\"grid-container\"> -->\n<!-- <div class=\"logo-container\">\n   <img class=\"logo\" src=\"assets/blockcore.png\">\n</div> -->\n<!-- <div class=\"content-container\"> -->\n<h1 class=\"title1\"><span class=\"accent\">Blockcore</span> is a platform that enables you to build your own blockchains.</h1>\n<!-- <h2 class=\"title2\">\n   Blockcore is a platform that enables you to build your own blockchains.\n</h2> -->\n<p>\n   Blockcore is the foundation for realizing blockchains and includes core functionality to create your own custom blockchain with a lot of tooling supporting your blockchain.\n</p>\n<p>\n   Blockcore is entirely open source and built on .NET and has an active and engaged community that contributes to the ecosystem.\n</p>\n<p>\n   The tooling as part of the Blockcore <a routerLink=\"/platform\">platform</a> includes; Block Explorer, Block Indexing, Block Analytics, Wallets, API Wallet Service, Developer Tooling, Documentation and more.\n</p>\n<p>\n   Blockcore is under continuous development to stay at the cutting edge of Bitcoin and blockchain technology.\n   We invite you to engage with our community on our <a href=\"https://www.blockcore.net/discord\">Discord</a>.\n</p>\n<p>\n   <br>\n   <a href=\"https://github.com/block-core\" class=\"link\">Get the source code</a>\n</p>\n<!-- </div>\n</div> -->\n","import { Component, OnDestroy, Renderer2 } from '@angular/core';\n\n@Component({\n   selector: 'app-nav-footer',\n   templateUrl: './nav-footer.component.html'\n})\nexport class NavFooterComponent {\n\n   className: string;\n\n   constructor(private renderer: Renderer2) {\n      this.updateMode();\n   }\n\n   get darkMode(): boolean {\n      return (localStorage.getItem('dark-mode') === 'on');\n   }\n\n   set darkMode(value: boolean) {\n      if (value) {\n         localStorage.setItem('dark-mode', 'on');\n      } else {\n         localStorage.setItem('dark-mode', 'off');\n      }\n\n      this.updateMode();\n   }\n\n   toggle() {\n      // Toggle the dark mode.\n      this.darkMode = !this.darkMode;\n\n      // const trans = () => {\n      //    document.documentElement.classList.add('transition');\n      //    window.setTimeout(() => {\n      //       document.documentElement.classList.remove('transition');\n      //    }, 500);\n      // };\n\n      // trans();\n\n      // Update the UI.\n      this.updateMode();\n   }\n\n   updateMode() {\n      if (this.darkMode) {\n         this.renderer.setAttribute(document.documentElement, 'data-theme', 'dark'); //  .addClass(document.body, 'dark');\n      } else {\n         this.renderer.setAttribute(document.documentElement, 'data-theme', 'light');\n         // this.renderer.removeClass(document.body, 'dark');\n      }\n   }\n}\n","<div class=\"footer footer-background\">\n   <div class=\"grid-container-footer\">\n      <div class=\"footer-left\">\n         <p>\n            Blockcore is an open source project started by a group of blockchain developers and engineers to realize\n            a fully integrated platform for building custom blockchains on .NET developer platform.\n         </p>\n      </div>\n      <div class=\"footer-right\">\n         <p class=\"icon-links\">\n            <a href=\"https://www.github.com/block-core/\"><i class=\"fab fa-github\"></i></a>\n            <a href=\"/discord\"><i class=\"fab fa-discord\"></i></a>\n            <a href=\"https://twitter.com/blockcoredev\"><i class=\"fab fa-twitter\"></i></a>\n         </p>\n      </div>\n      <div class=\"footer-toggle\">\n\n         <div class=\"mode-toggle\">\n            <input type=\"checkbox\" id=\"switch\" name=\"mode\" [(ngModel)]=\"darkMode\">\n            <label for=\"switch\"></label>\n         </div>\n      </div>\n   </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html'\n})\nexport class NavMenuComponent {\n\n}\n","<header>\n  <nav class=\"navbar\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n      <img class=\"navbar-logo\" src=\"assets/blockcore-small.png\">\n    </a>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\" [routerLinkActiveOptions]=\"{ exact: true }\">\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Home</a>.\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n        <a class=\"nav-link\" [routerLink]=\"['/platform']\">Platform</a>.\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n        <a class=\"nav-link\" [routerLink]=\"['/chains']\">Chains</a>.\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n        <a class=\"nav-link\" [routerLink]=\"['/sponsors']\">Sponsors</a>.\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n        <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>.\n      </li>\n    </ul>\n  </nav>\n</header>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-platform-component',\n  templateUrl: './platform.component.html'\n})\nexport class PlatformComponent {\n\n}\n","<h1>Blockcore /// Platform</h1>\n\n<h2>Node</h2>\n\n<p><a href=\"/assets/screenshots/blockcore-node.png\" target=\"_blank\"><img src=\"assets/screenshots/blockcore-node.png\" class=\"thumbnail-large\"></a>The node software is a full node software that runs the blockchain network. It is compatible with Bitcoin and\n   utilized by other blockchains at the primary full node.</p>\n\n<p>To build your own blockchain based on Blockcore you have two options; perform a fork of our primary source code, this\n   is preferred if you need to radically modify the blockchain functionality.</p>\n\n<p>The other way is to utilize our blockchain template, which is generated and relies on published on NuGet. This\n   enables you to quickly and easily launch your own blockchain, and you will easily be able to get latest updates\n   without messing with source code.</p>\n\n<p>To simplify using our tools, we have made <a routerLink=\"/create-chain\">instructions and generators available\n      here</a>.</p>\n\n<p>Source repo for template-based node: <a\n      href=\"https://github.com/block-core/blockcore-node\">https://github.com/block-core/blockcore-node</a> (Preferred)\n</p>\n\n<p>Source repo for fork-based node: <a\n      href=\"https://github.com/block-core/blockcore\">https://github.com/block-core/blockcore</a></p>\n\n<h2>Explorer</h2>\n\n<p><a href=\"/assets/screenshots/blockcore-explorer.png\" target=\"_blank\"><img src=\"assets/screenshots/blockcore-explorer.png\" class=\"thumbnail\"></a>Together with the Blockcore Indexer (below), we have made the Blockcore Explorer. If you have a normal Blockcore\n   based blockchain, it is super easy to add support for your custom chain and deploy your blockchain explorer.</p>\n\n   <p>The explorer has sections for Network and Insight, which shows statistics on the network and supply (total supply, circulating supply, rewards) and economy information on the blockchain.</p>\n\n<p>Code: <a href=\"https://github.com/block-core/blockcore-explorer\">https://github.com/block-core/blockcore-explorer</a>\n</p>\n\n<h2>Indexer</h2>\n\n<p><a href=\"/assets/screenshots/blockcore-indexer.png\" target=\"_blank\"><img src=\"assets/screenshots/blockcore-indexer.png\" class=\"thumbnail\"></a>Being able to look up blocks, transactions and addresses is an important part of any blockchain. It is very easy to\n   add your own custom blockchain to the explorer.\n</p>\n\n<p>Code: <a href=\"https://github.com/block-core/blockcore-indexer\">https://github.com/block-core/blockcore-indexer</a>\n</p>\n\n<h2>Tipbot</h2>\n\n<p><a href=\"/assets/screenshots/blockcore-tipbot.png\" target=\"_blank\"><img src=\"assets/screenshots/blockcore-tipbot.png\" class=\"thumbnail\"></a>Blockcore Tipbot is a generic tipping bot for Discord (future support for Twitch and Twitter is being added) that supports all Blockcore blockchains.\n   It is easy to configure and use, and allows communities to easily tip based on community work and contributions.\n</p>\n\n<p>Code: <a href=\"https://github.com/block-core/blockcore-tipbot\">https://github.com/block-core/blockcore-tipbot</a>\n</p>\n\n<h2>Decentralized Identifiers</h2>\n\n<p>Blockcore is committed to supporting the ecosystem of Decentralized Identifiers (DIDs) and the DID method for Blockcore is \"did:is:\". This is a work in progress.\n</p>\n\n<p>Specification: <a href=\"https://github.com/block-core/blockcore-did-method\">https://github.com/block-core/blockcore-did-method</a>\n</p>","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-sponsors',\n  templateUrl: './sponsors.component.html'\n})\nexport class SponsorsComponent {\n\n}\n","<h1>Blockcore /// Sponsors</h1>\n\n<h2>Sponsoring</h2>\n\n<p>Blockcore is a group of independent individuals without any official organization behind it. All work is done on\n  voluntary basis.</p>\n\n<p>If you enjoy our software and services, please feel free to help continue the development and improvement of the\n  Blockcore Platform by becoming an sponsor.</p>\n\n<p>\n  Funds provided to the Blockcore team will be utilized for server infrastructure, hosting services and other expenses\n  related to the continued development and hosting of the Blockcore Platform.\n</p>\n\n<h3>Open Collective: Blockcore</h3>\n\n<p>\n  <a href=\"https://opencollective.com/blockcore\">https://opencollective.com/blockcore</a>\n</p>\n\n<h3>GitCoin</h3>\n\n<p>\n  <a href=\"https://gitcoin.co/grants/1172/the-blockcore-fund\">https://gitcoin.co/grants/1172/the-blockcore-fund</a>\n</p>\n\n<h3>Alternative</h3>\n\n<p>\n  If you'd like to become an official sponsor, please contact us by e-mail at <a href=\"mailto:post@blockcore.net\">post@blockcore.net</a>.\n</p>\n\n<h3>Individual sponsor support</h3>\n\n<p>You also have the option of providing support to the individuals working on Blockcore. Not everyone in the group have\n  a sponsor service available, but those who do is listed below:</p>\n\n<div class=\"sponsor-widget\">\n  <a href=\"https://github.com/sponsors/sondreb\">\n    <img src=\"https://avatars1.githubusercontent.com/u/309938?s=180&u=c82ed1827100905dc561460fdfc68ca463b29194&v=4\">\n    Sondre Bjellås\n  </a>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n   return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n   { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n   enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n   .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}